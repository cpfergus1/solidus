version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1.3
  codecov: codecov/codecov@3.2.3

executors:
  base:
    working_directory: &workdir ~/solidus
    environment: &environment
      DEFAULT_MAX_WAIT_TIME: 10
      SOLIDUS_RAISE_DEPRECATIONS: true
      CIRCLE_TEST_REPORTS: /tmp/test-results
      CIRCLE_ARTIFACTS: /tmp/test-artifacts
      BUNDLE_WITHOUT: "utils"
    docker:
      - image: &image cimg/ruby:2.7-browsers

  postgres:
    working_directory: *workdir
    environment:
      <<: *environment
      DB: postgresql
      DB_HOST: localhost
    docker:
      - image: *image
      - image: jhawthorn/circleci-postgres-fast
        environment:
          POSTGRES_USER: root

  mysql:
    working_directory: *workdir
    environment:
      <<: *environment
      DB: mysql
      DB_HOST: 127.0.0.1
      DB_USERNAME: root
    docker:
      - image: *image
      - image: cimg/mysql:5.7

  sqlite:
    working_directory: *workdir
    environment:
      <<: *environment
      DB: sqlite
    docker:
      - image: *image

  ruby30:
    working_directory: *workdir
    environment:
      <<: *environment
      DB: sqlite
    docker:
      - image: cimg/ruby:3.0-browsers

  ruby31:
    working_directory: *workdir
    environment:
      <<: *environment
      DB: sqlite
    docker:
      - image: cimg/ruby:3.1-browsers

commands:
  setup:
    steps:
      - checkout
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run: |
          gem install bundler -v"~> 2.1" --conservative
          bundle lock
      - restore_cache:
          keys:
            - solidus-gems-v3-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - solidus-gems-v3-{{ .Branch }}
            - solidus-gems-v3-master
            - solidus-gems-v3

      - run: |
          bundle config set path 'vendor/bundle'
          bundle check || bundle install
          bundle clean

      - save_cache:
          key: solidus-gems-v3-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

  test:
    steps:
      - run:
          name: Run Tests
          command: ./bin/build-ci test

      - store_artifacts:
          path: /tmp/test-artifacts
          destination: test-artifacts

      - store_artifacts:
          path: /tmp/test-results
          destination: raw-test-output

      - store_test_results:
          path: /tmp/test-results

  test_with_coverage:
    # This command creates a dir to hold coverage data, run test suites with coverage enabled and
    # generate the coverage report.
    description: Run Tests With Coverage Enabled
    steps:
      - run:
          name: Setup Coverage Env Vars
          command: |
              echo 'export COVERAGE_FILE=$COVERAGE_DIR/coverage.xml' >> $BASH_ENV
              source $BASH_ENV
      - run:
          name: Verify Coverage Env Vars
          command: |
              echo $COVERAGE
              echo $COVERAGE_DIR
              echo $COVERAGE_FILE
      - run:
          name: Setup Coverage Directory
          command: mkdir -p $COVERAGE_DIR
      - test
      - run:
          name: Report Coverage
          command: bundle exec rake solidus:coverage[cobertura]

  # TODO: Integrate with `setup` when we deprecate support
  # for Rails 6.1 (vips is the default from Rails 7)
  libvips:
    steps:
      - run:
          name: Install libvips
          command: sudo apt-get install -y libvips

  install_solidus:
    parameters:
      flags:
        type: string
        default: "# no options"
        description: "flags to be passed to `bin/rails g solidus:install"
      home_page_text:
        type: string
    steps:
      - run:
          name: "Cleanup & check rails version"
          command: |
            gem environment path
            rm -rf /tmp/my_app /tmp/.tool-versions # cleanup previous runs

            ruby -v >> /tmp/.tool-versions
            gem search -eq rails >> /tmp/.tool-versions # get the latest rails from rubygems
            gem search -eq solidus >> /tmp/.tool-versions # get the latest solidus from rubygems

            cat /tmp/.tool-versions
      - restore_cache:
          keys:
            - solidus-installer-v5-{{ checksum "/tmp/.tool-versions" }}
            - solidus-installer-v5-
      - run:
          name: "Prepare the rails application"
          command: |
            cd /tmp
            test -d my_app || gem install rails solidus
            test -d my_app || rails new my_app --skip-javascript --skip-git
      - save_cache:
          key: solidus-installer-v5-{{ checksum "/tmp/.tool-versions" }}
          paths:
            - /tmp/my_app
            - /home/circleci/.rubygems
      - run:
          name: "Run `solidus:install` with `<<parameters.flags>>`"
          command: |
            cd /tmp/my_app
            bundle add solidus --git "file://$(ruby -e"puts File.expand_path ENV['CIRCLE_WORKING_DIRECTORY']")"
            export SKIP_SOLIDUS_BOLT='true' # workaround for solidus_frontend not being able to properly install bolt in this context
            unset RAILS_ENV # avoid doing everything on the test environment
            bin/rails generate solidus:install --auto-accept <<parameters.flags>>
      - run:
          name: "Test the home page"
          command: |
            cd /tmp/my_app
            unset RAILS_ENV # avoid doing everything on the test environment
            bin/rails server -p 3000 &
            wget --quiet --output-document - --tries=30 --retry-connrefused "http://localhost:3000" | grep "<<parameters.home_page_text>>"
            echo "Exited with $?"
            kill $(cat "tmp/pids/server.pid")

jobs:
  solidus_installer:
    executor: sqlite
    steps:
      - checkout
      - run:
          name: "apt-get update, for libvips"
          command: "sudo apt-get update"
      - libvips
      - install_solidus:
          flags: "--sample=false"
          home_page_text: "The only eCommerce platform you’ll ever need."
      - install_solidus:
          flags: "--sample=false --frontend=none"
          home_page_text: "<title>Ruby on Rails"
      - install_solidus:
          flags: "--sample=false --frontend=solidus_frontend"
          home_page_text: "data-hook="
      - install_solidus:
          flags: "--sample=false --frontend=solidus_starter_frontend"
          home_page_text: "The only eCommerce platform you’ll ever need."

  postgres:
    executor: postgres
    parallelism: &parallelism 3
    environment:
      COVERAGE: 'true'
      COVERAGE_DIR: /tmp/coverage
    steps:
      - setup
      - libvips
      - test_with_coverage

  legacy_events:
    executor: postgres
    parallelism: &parallelism
    environment:
      USE_LEGACY_EVENTS: '1'
    steps:
      - setup
      - libvips
      - test

  mysql:
    executor: mysql
    parallelism: *parallelism
    steps:
      - setup
      - libvips
      - test

  postgres_rails61:
    executor: postgres
    parallelism: *parallelism
    environment:
      RAILS_VERSION: '~> 6.1.0'
    steps:
      - setup
      - test

  sqlite:
    executor: sqlite
    parallelism: *parallelism
    steps:
      - setup
      - libvips
      - test

  postgres_rails60:
    executor: postgres
    parallelism: *parallelism
    environment:
      RAILS_VERSION: '~> 6.0.0'
      DISABLE_ACTIVE_STORAGE: true
    steps:
      - setup
      - test

  postgres_rails52:
    executor: postgres
    parallelism: *parallelism
    environment:
      RAILS_VERSION: '~> 5.2.0'
      DISABLE_ACTIVE_STORAGE: true
    steps:
      - setup
      - test

  ruby30:
    executor: ruby30
    parallelism: *parallelism
    environment:
      RAILS_VERSION: '>= 7.0.1'
      DISABLE_ACTIVE_STORAGE: true
    steps:
      - setup
      - test

  ruby31:
    executor: ruby31
    parallelism: *parallelism
    environment:
      RAILS_VERSION: '>= 7.0.1'
      DISABLE_ACTIVE_STORAGE: true
    steps:
      - setup
      - test

workflows:
  build:
    jobs:
      - postgres:
          post-steps:
            - codecov/upload:
                file: $COVERAGE_FILE
      - mysql
      - sqlite
      - postgres_rails61
      - postgres_rails60
      - postgres_rails52
      - ruby30
      - ruby31
      - legacy_events
      - solidus_installer
